---
import Layout from '../layouts/Layout.astro';
import '../styles/billing.css';
import { Image } from 'astro:assets';
import defaultMemberLogo from '../assets/default-team.png';
---

<Layout title="PurelyAuth - Billing">
  <main class="billing-container">
    <section class="profile-section">
      <div class="profile-header">
        <div class="header-actions">
          <h1>Billing</h1>
          <button class="btn btn-outline" onclick="window.location.href='/chatbots'">
            ← Return to Chatbots
          </button>
        </div>
        <p class="subtitle">Manage your subscription plan</p>
      </div>
      <div class="billing-content">
        <div class="current-plan card">
          <h3>Your Current Plan</h3>
          <div id="plan-details" class="plan-details">
            <p>Loading your plan information...</p>
          </div>
          <div id="plan-actions" class="plan-actions">
          </div>
          <p id="error-message"></p>
        </div>
      </div>
    </section>
  </main>

  <div id="cancelModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      
      <div id="cancellationContent">
        <h3>Cancel Subscription</h3>
        <p>We're sorry to see you go! If you cancel your subscription:</p>
        <ul>
          <li>You'll lose access to Pro or Business features immediately</li>
          <li>Your account will revert to the Free plan</li>
          <li>Any data beyond Free plan limits may be archived</li>
        </ul>
        <p>Would you like to continue with cancellation?</p>
        <div class="modal-actions">
          <button class="btn btn-outline" id="cancelModalClose">No, Keep My Plan</button>
          <button class="btn btn-danger" id="confirmCancel">Yes, Cancel Subscription</button>
        </div>
      </div>
      
      <div id="cancellationConfirmation" style="display: none;">
        <h3>Cancellation Request Received</h3>
        <p>To complete your cancellation, please contact our support team:</p>
        <div class="modal-actions">
          <a href="/contact" class="btn btn-primary">Contact Support Now</a>
          <button class="btn btn-outline" id="returnToBilling" onclick="location.href = '/billing'">Return to Billing</button>
        </div>
      </div>
    </div>
  </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    let isProUser = false;
    let isBusinessUser = false;
    const BASE_URL = window.location.origin;
    const redirectURL = `${BASE_URL}/billing`;
    const emailCode = localStorage.getItem('emailCode');
    const message = document.getElementById('error-message');
    const planDetails = document.getElementById('plan-details');
    const planActions = document.getElementById('plan-actions');
    
    if (!emailCode) {
      window.location.href = '/login';
      return;
    }

    async function handlePaymentStatus() {
      const urlParams = new URLSearchParams(window.location.search);
      const paymentStatus = urlParams.get("status");
      const subscriptionId = urlParams.get("subscription_id");

      if (paymentStatus === "active") {
        try {
          const response = await fetch('/api/update-plan', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              emailCode: localStorage.getItem('emailCode'), 
              subscriptionId: subscriptionId
            })
          });

          const result = await response.json();
          
          if (result.redirect == '/login') {
            localStorage.removeItem('emailCode');
            message.textContent = result.message;
            message.style.color = '#B71C1C';
            setTimeout(() => {
              window.location.href = result.redirect;
            }, 1500);
            return;
          }

          if (response.status === 400) {
            message.textContent = result.message;
            message.style.color = '#FFC107';
            return;
          } else if (response.status === 500) {
            message.textContent = result.message; 
            message.style.color = '#F44336';
            return;
          }

          if (!response.ok) {
            throw new Error(result.message || result.error || 'Failed to update your plan');
          }

          if (result.product_type === 'business') {
            isBusinessUser = true;
            isProUser = false;
          } else if (result.product_type === 'pro') {
            isProUser = true;
            isBusinessUser = false;
          } else {
            throw new Error(result.message || result.error || 'Failed to update your plan');
          }

          sessionStorage.setItem('isProUser', isProUser);
          sessionStorage.setItem('isBusinessUser', isBusinessUser);
          
          renderPlan();

          message.textContent = "Payment successful! Your plan has been updated.";
          message.style.color = '#4CAF50';
        } catch (error) {
          message.textContent = error.message;
          message.style.color = '#B71C1C';
        }
    } else {
        message.textContent = "Payment failed or cancelled. Please try again.";
        message.style.color = '#F44336';
      }  
    }

    if (window.location.search.includes("subscription_id") && window.location.search.includes("status")) {
      handlePaymentStatus();
    }

    function renderPlan() {
      if (isBusinessUser) {
        planDetails.innerHTML = `
          <div class="plan-name">
            <h4>Business</h4>
            <span class="badge active">Active</span>
          </div>
          <a href="/pricing" class="pricing-link">View all plan features →</a>
          <div class="plan-price">
            <span class="amount">$99</span>
            <span class="period">/month</span>
          </div>
          <p class="renewal-date">Renews on <strong>June 15, 2024</strong></p>
        `;
        planActions.innerHTML = `
          <button class="btn btn-outline" onclick="window.location.href='/contact'">Contact Us for a Custom Plan</button>
          <button class="btn btn-danger" id="cancelSubscriptionBtn">Cancel Subscription</button>
        `;
      } else if (isProUser) {
        planDetails.innerHTML = `
          <div class="plan-name">
            <h4>Pro</h4>
            <span class="badge active">Active</span>
          </div>
          <a href="/pricing" class="pricing-link">View all plan features →</a>
          <div class="plan-price">
            <span class="amount">$9</span>
            <span class="period">/month</span>
          </div>
          <p class="renewal-date">Renews on <strong>June 15, 2024</strong></p>
        `;
        planActions.innerHTML = `
          <button class="btn btn-primary" id="upgradeToBusiness">Upgrade to Business</button>
          <button class="btn btn-danger" id="cancelSubscriptionBtn">Cancel Subscription</button>
        `;
      } else {
        planDetails.innerHTML = `
          <div class="plan-name">
            <h4>Free</h4>
            <span class="badge">Inactive</span>
          </div>
          <a href="/pricing" class="pricing-link">Compare all plan features →</a>
          <div class="plan-price">
            <span class="amount">$0</span>
            <span class="period">/month</span>
          </div>
          <p class="renewal-date">Upgrade to unlock all features</p>
        `;
        planActions.innerHTML = `
          <div class="upgrade-options">
            <button class="btn btn-primary" id="upgradeToPro">Upgrade to Pro ($9/month)</button>
            <button class="btn btn-primary" id="upgradeToBusiness">Upgrade to Business ($99/month)</button>
          </div>
        `;
      }

      document.addEventListener('click', (e) => {
          const redirectURL = `${window.location.origin}/billing`;
          const encodedRedirect = encodeURIComponent(redirectURL);
          
          if (e.target && e.target.id === 'upgradeToPro') {
            const paymentURL = `https://test.checkout.dodopayments.com/buy/pdt_IwvOy1RQ0NzKldpDy0n6u?quantity=1&redirect_url=${encodedRedirect}`;
            window.location.href = paymentURL;
          }
          
          if (e.target && e.target.id === 'upgradeToBusiness') {
            const paymentURL = `https://test.checkout.dodopayments.com/buy/pdt_7NR5zqHCZtltX7k21VGP5?quantity=1&redirect_url=${encodedRedirect}`;
            window.location.href = paymentURL;
          }
      });

      const cancelBtn = document.getElementById("cancelSubscriptionBtn");
      if (cancelBtn) {
        cancelBtn.onclick = function() {
          document.getElementById("cancelModal").style.display = "block";
          document.getElementById("cancellationContent").style.display = "block";
          document.getElementById("cancellationConfirmation").style.display = "none";
        }
      }
    }

    async function getTier() {
      try {
        const response = await fetch('/api/check-tier', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            emailCode: localStorage.getItem('emailCode') 
          })
        });

        const result = await response.json();
        
        if (result.redirect == '/login') {
          localStorage.removeItem('emailCode');
          message.textContent = result.message;
          message.style.color = '#B71C1C';
          setTimeout(() => {
            window.location.href = result.redirect;
          }, 1500);
          return;
        }

        if (response.status === 400) {
          message.textContent = result.message;
          message.style.color = '#FFC107';
          return;
        } else if (response.status === 500) {
          message.textContent = result.message; 
          message.style.color = '#F44336';
          return;
        }

        if (!response.ok) {
          throw new Error(result.message || result.error || 'Failed to retrieve your plan');
        }

        sessionStorage.setItem('isProUser', result.isProUser || '');
        sessionStorage.setItem('isBusinessUser', result.isBusinessUser || '');

        isProUser = result.isProUser || false;
        isBusinessUser = result.isBusinessUser || false;
        
        renderPlan();

      } catch (error) {
        message.textContent = error.message;
        message.style.color = '#B71C1C';
      }
    }

    const modal = document.getElementById("cancelModal");
    const span = document.querySelector(".close");
    const cancelClose = document.getElementById("cancelModalClose");
    const confirmCancel = document.getElementById("confirmCancel");

    if (span) {
      span.onclick = function() {
        modal.style.display = "none";
      }
    }

    if (cancelClose) {
      cancelClose.onclick = function() {
        modal.style.display = "none";
      }
    }

    if (confirmCancel) {
      confirmCancel.onclick = function() {
         document.getElementById("cancellationContent").style.display = "none";
          document.getElementById("cancellationConfirmation").style.display = "block";
      }
    }

    window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    }

    if (!sessionStorage.getItem('isProUser') || !sessionStorage.getItem('isBusinessUser')) {
      getTier();
    } else {
      isProUser = sessionStorage.getItem('isProUser') === 'true';
      isBusinessUser = sessionStorage.getItem('isBusinessUser') === 'true';
      renderPlan();
    }
  });
</script>
